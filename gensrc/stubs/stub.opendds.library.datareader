
project(%(libname)sDefaultDataReader) : dcps, install {

  after    += qldds_utils %(libname)s

  sharedname     = %(sharedname)sDefaultDataReader
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs

  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils $(QL_ROOT)/include 

  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils  \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I$(QLDDS_ROOT)/qldds_utils -Wb,export_macro=QLDDS_Export
  libpaths      += $(QLDDS_ROOT)/qldds_utils $(QL_ROOT)/lib

   libout        = $(QLDDS_ROOT)/lib

  libs  += ObjectHandler QuantLib QuantLibAddin QuantLibAddinCpp qldds_utils %(sharedname)s boost_date_time

  TypeSupport_Files {
  }

  IDL_Files {
  }

  Header_Files {
         %(readerImplHpp)s
  }

  Source_Files {
         %(readerImplCpp)s
  }

}
