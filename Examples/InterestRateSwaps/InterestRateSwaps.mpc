//
//   Copyright (C) 2016 Mike Kipnis

//   This file is part of QLDDS, a free-software/open-source library
//   for utilization of QuantLib in the distributed envrionment via DDS.

//   Permission is hereby granted, free of charge, to any person obtaining a copy
//   of this software and associated documentation files (the "Software"), to deal
//   in the Software without restriction, including without limitation the rights
//   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//   copies of the Software, and to permit persons to whom the Software is
//   furnished to do so, subject to the following conditions:

//   The above copyright notice and this permission notice shall be included in all
//   copies or substantial portions of the Software.

//   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//   SOFTWARE.


project(IRSPortfolio) : dcps {
  sharedname     = IRSPortfolio 
  dynamicflags   = IRSPORTFOLIO_BUILD_DLL
  libout         = .
  requires += tao_orbsvcs
  after    += Svc_Utils
  includes      += $(TAO_ROOT)/orbsvcs
  idlflags      += -I$(TAO_ROOT)/orbsvcs \
                   -Wb,export_macro=IRSPortfolioCommon_Export \
                   -Wb,export_include=IRSPortfolioCommon_Export.h
  dcps_ts_flags += -Wb,export_macro=IRSPortfolioCommon_Export


  TypeSupport_Files {
    IRSPortfolio.idl
  }

  IDL_Files {
    IRSPortfolio.idl
    IRSPortfolioTypeSupport.idl
  }

  // We only want the generated files
  Header_Files {
  }

  // We only want the generated files
  Source_Files {
  }
}

project(IRSCalculator) : dcpsexe, svc_utils {
        exename         =       IRSCalculator
        requires       +=       tao_orbsvcs
        after          +=	IRSPortfolio qldds_utils ratehelpers vanillaswap schedule ratehelpersDefaultDataReader vanillaswapDefaultDataReader scheduleDefaultDataReader

        includes       +=       $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils $(QLDDS_ROOT)/Addins/OpenDDS $(QL_ROOT)/include $(QL_ROOT)/include/qlo
	libpaths 	+= 	$(QL_ROOT)/lib $(QLDDS_ROOT)/lib

	  pure_libs       =     $(QL_ROOT)/lib/libQuantLibAddinCpp.a \
                        $(QL_ROOT)/lib/libQuantLibAddin.a \
                        $(QL_ROOT)/lib/libObjectHandler.a \
                        $(QL_ROOT)/lib/libQuantLib.a \
			$(QL_ROOT)/lib/libboost_system.a  \
			$(QL_ROOT)/lib/libboost_serialization.a \
			$(QL_ROOT)/lib/libboost_filesystem.a \
			$(QLDDS_ROOT)/lib/libratehelpersDefaultDataReader.a \
			$(QLDDS_ROOT)/lib/libvanillaswapDefaultDataReader.a \
			$(QLDDS_ROOT)/lib/libscheduleDefaultDataReader.a



        libs           +=  	 IRSPortfolio  ratehelpers vanillaswap schedule QuantLibAddinCpp qldds_utils




        TypeSupport_Files {
        }

        IDL_Files {
        }

        Source_Files {
               IRSCalculator.cpp
        }
}

project(IRSClient) : dcpsexe, svc_utils {
        after          += IRSPortfolio qldds_utils

        exename         =       IRSClient
        requires       +=       tao_orbsvcs

        includes       +=       $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils $(QLDDS_ROOT)/Addins/OpenDDS 
        libpaths       +=      $(QLDDS_ROOT)/qldds_utils $(QLDDS_ROOT)/Addins/OpenDDS

        libs           +=       qldds_utils IRSPortfolio  

        TypeSupport_Files {
        }

        IDL_Files {
        }

        Source_Files {
               IRSClient.cpp
        }
}

project(MarketDataPublisher) : dcpsexe_with_tcp {
	after		+=	IRSPortfolio ratehelpers 
        exename         =       MarketDataPublisher 
        requires       +=       tao_orbsvcs

        includes       +=       $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils $(QLDDS_ROOT)/Addins/OpenDDS
        libpaths       +=       $(QLDDS_ROOT)/qldds_utils $(QLDDS_ROOT)/Addins/OpenDDS

        libs           +=       qldds_utils ratehelpers 

        Source_Files {
                MarketDataPublisher.cpp
        }
}

project(InstrumentDataPublisher) : dcpsexe, svc_utils {
	after		+=	IRSPortfolio qldds_utils schedule vanillaswap
        exename         =       InstrumentDataPublisher 
        requires       +=       tao_orbsvcs

        includes       +=       $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils $(QL_ROOT)/include $(QLDDS_ROOT)/Addins/OpenDDS
        libpaths       +=       $(QLDDS_ROOT)/qldds_utils $(QLDDS_ROOT)/Addins/OpenDDS $(QL_ROOT)/lib

        libs           +=       qldds_utils schedule vanillaswap boost_date_time

        Source_Files {
                InstrumentDataPublisher.cpp
        }
}
