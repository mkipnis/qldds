/*
   Copyright (C) 2016 Mike Kipnis

   This file is part of QLDDS, a free-software/open-source library
   for utilization of QuantLib in the distributed envrionment via DDS.

   Permission is hereby granted, free of charge, to any person obtaining a copy
   of this software and associated documentation files (the "Software"), to deal
   in the Software without restriction, including without limitation the rights
   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   copies of the Software, and to permit persons to whom the Software is
   furnished to do so, subject to the following conditions:

   The above copyright notice and this permission notice shall be included in all
   copies or substantial portions of the Software.

   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
   SOFTWARE.
*/
// This file was generated automatically by qldds_gensrc.py.  If you edit this file
// manually then your changes will be lost the next time gensrc runs.

// This source code file was generated from the following stub:
//      qldds/gensrc/stubs/stub.opendds.module

#ifndef bonds_IDL
#define bonds_IDL

#include <qldds_types.idl>

module bonds {

#pragma DCPS_DATA_TYPE "bonds::qlBond"
#pragma DCPS_DATA_KEY "bonds::qlBond instanceID" 

   struct qlBond { 
          string instanceID;
          
             string ObjectId;
             string Description;
             string Currency;
             long SettlementDays;
             string Calendar;
             double FaceAmount;
             string MaturityDate;
             string IssueDate;
             string LegID;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "bonds::qlCmsRateBond"
#pragma DCPS_DATA_KEY "bonds::qlCmsRateBond instanceID" 

   struct qlCmsRateBond { 
          string instanceID;
          
             string ObjectId;
             string Description;
             string Currency;
             long SettlementDays;
             string PaymentBDC;
             double FaceAmount;
             string ScheduleID;
             long FixingDays;
             boolean IsInArrears;
             string DayCounter;
             qldds_utils::DoubleSeq Floors;
             qldds_utils::DoubleSeq Gearings;
             string SwapIndex;
             qldds_utils::DoubleSeq Spreads;
             qldds_utils::DoubleSeq Caps;
             double Redemption;
             string IssueDate;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "bonds::qlFixedRateBond"
#pragma DCPS_DATA_KEY "bonds::qlFixedRateBond instanceID" 

   struct qlFixedRateBond { 
          string instanceID;
          
             string ObjectId;
             string Description;
             string Currency;
             long SettlementDays;
             double FaceAmount;
             string ScheduleID;
             qldds_utils::DoubleSeq Coupons;
             string DayCounter;
             string PaymentBDC;
             double Redemption;
             string IssueDate;
             string PaymentCalendar;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "bonds::qlFixedRateBond2"
#pragma DCPS_DATA_KEY "bonds::qlFixedRateBond2 instanceID" 

   struct qlFixedRateBond2 { 
          string instanceID;
          
             string ObjectId;
             string Description;
             string Currency;
             long SettlementDays;
             double FaceAmount;
             string ScheduleID;
             qldds_utils::StringSeq Coupons;
             string PaymentBDC;
             double Redemption;
             string IssueDate;
             string PaymentCalendar;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "bonds::qlFloatingRateBond"
#pragma DCPS_DATA_KEY "bonds::qlFloatingRateBond instanceID" 

   struct qlFloatingRateBond { 
          string instanceID;
          
             string ObjectId;
             string Description;
             string Currency;
             long SettlementDays;
             string PaymentBDC;
             double FaceAmount;
             string ScheduleID;
             long FixingDays;
             boolean IsInArrears;
             string DayCounter;
             qldds_utils::DoubleSeq Floors;
             qldds_utils::DoubleSeq Gearings;
             string IborIndex;
             qldds_utils::DoubleSeq Spreads;
             qldds_utils::DoubleSeq Caps;
             double Redemption;
             string IssueDate;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "bonds::qlZeroCouponBond"
#pragma DCPS_DATA_KEY "bonds::qlZeroCouponBond instanceID" 

   struct qlZeroCouponBond { 
          string instanceID;
          
             string ObjectId;
             string Description;
             string Currency;
             long SettlementDays;
             string Calendar;
             double FaceAmount;
             string Maturity;
             string PaymentBDC;
             double Redemption;
             string IssueDate;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };
};

#endif
